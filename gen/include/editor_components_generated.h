// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_EDITORCOMPONENTS_SCENE_LAB_H_
#define FLATBUFFERS_GENERATED_EDITORCOMPONENTS_SCENE_LAB_H_

#include "flatbuffers/flatbuffers.h"

#include "common_generated.h"

namespace scene_lab {

struct EditOptionsDef;

enum SelectionOption {
  SelectionOption_Unspecified = 0,
  SelectionOption_Any = 1,
  SelectionOption_None = 2,
  SelectionOption_CycleOnly = 3,
  SelectionOption_PointerOnly = 4,
  SelectionOption_MIN = SelectionOption_Unspecified,
  SelectionOption_MAX = SelectionOption_PointerOnly
};

inline const char **EnumNamesSelectionOption() {
  static const char *names[] = { "Unspecified", "Any", "None", "CycleOnly", "PointerOnly", nullptr };
  return names;
}

inline const char *EnumNameSelectionOption(SelectionOption e) { return EnumNamesSelectionOption()[static_cast<int>(e)]; }

enum RenderOption {
  RenderOption_Unspecified = 0,
  RenderOption_Always = 1,
  RenderOption_OnlyInEditor = 2,
  RenderOption_NotInEditor = 3,
  RenderOption_MIN = RenderOption_Unspecified,
  RenderOption_MAX = RenderOption_NotInEditor
};

inline const char **EnumNamesRenderOption() {
  static const char *names[] = { "Unspecified", "Always", "OnlyInEditor", "NotInEditor", nullptr };
  return names;
}

inline const char *EnumNameRenderOption(RenderOption e) { return EnumNamesRenderOption()[static_cast<int>(e)]; }

struct EditOptionsDef FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_SELECTION_OPTION = 4,
    VT_RENDER_OPTION = 6
  };
  SelectionOption selection_option() const { return static_cast<SelectionOption>(GetField<uint8_t>(VT_SELECTION_OPTION, 0)); }
  bool mutate_selection_option(SelectionOption _selection_option) { return SetField(VT_SELECTION_OPTION, static_cast<uint8_t>(_selection_option)); }
  RenderOption render_option() const { return static_cast<RenderOption>(GetField<uint8_t>(VT_RENDER_OPTION, 0)); }
  bool mutate_render_option(RenderOption _render_option) { return SetField(VT_RENDER_OPTION, static_cast<uint8_t>(_render_option)); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint8_t>(verifier, VT_SELECTION_OPTION) &&
           VerifyField<uint8_t>(verifier, VT_RENDER_OPTION) &&
           verifier.EndTable();
  }
};

struct EditOptionsDefBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_selection_option(SelectionOption selection_option) { fbb_.AddElement<uint8_t>(EditOptionsDef::VT_SELECTION_OPTION, static_cast<uint8_t>(selection_option), 0); }
  void add_render_option(RenderOption render_option) { fbb_.AddElement<uint8_t>(EditOptionsDef::VT_RENDER_OPTION, static_cast<uint8_t>(render_option), 0); }
  EditOptionsDefBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  EditOptionsDefBuilder &operator=(const EditOptionsDefBuilder &);
  flatbuffers::Offset<EditOptionsDef> Finish() {
    auto o = flatbuffers::Offset<EditOptionsDef>(fbb_.EndTable(start_, 2));
    return o;
  }
};

inline flatbuffers::Offset<EditOptionsDef> CreateEditOptionsDef(flatbuffers::FlatBufferBuilder &_fbb,
    SelectionOption selection_option = SelectionOption_Unspecified,
    RenderOption render_option = RenderOption_Unspecified) {
  EditOptionsDefBuilder builder_(_fbb);
  builder_.add_render_option(render_option);
  builder_.add_selection_option(selection_option);
  return builder_.Finish();
}

}  // namespace scene_lab

#endif  // FLATBUFFERS_GENERATED_EDITORCOMPONENTS_SCENE_LAB_H_
